bool_expr = _{ SOI ~ expr ~ EOI }

expr = {
    (paren_bool | comp_expr | fts) ~ ( (and_op | or_op) ~ (paren_bool | comp_expr | fts))*
}

and_op = { "and" }
or_op = { "or" }

paren_bool = { "(" ~ expr ~  ")" }
comp_expr = {
    field ~ scalar_op ~ scalar_value
    | field ~ list_op ~ list_value
}
fts = @{ string_literal }

field = @{ (ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "-" | "_" | ".")*) }
scalar_op = { eq | neq | gte | gt | lte | lt | like | not_like }
list_op = { eq | neq | op_in | op_not_in }
eq = { "=" }
neq = { "!=" | "<>"}
op_in = { "in" }
op_not_in= { "not" ~ "in"}
gt = { ">" }
gte = { ">=" }
lt = { "<" }
lte = { "<=" }
like = { "like" }
not_like = { "not" ~ "like" }

scalar_value = {
    string_literal
    | num_literal
}
list_value = {
    string_list
    | num_list
}

string_list = { "(" ~ string_literal ~("," ~ string_literal)* ~ ")" }
num_list = { "(" ~ num_literal ~("," ~ num_literal)* ~ ")" }

num_literal = @{
    "-"?
    ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ ("." ~ ASCII_DIGIT*)?
}

string_literal = ${ "\"" ~ string ~ "\"" }
string = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

WHITESPACE = _{ " " | "\n" | "\r" }

