# vim: set ft=conf :

# Example rsyslog configuration to run stuffimport

#################
#### MODULES ####
#################

# this example will use UDP transport to get log events
module(load="imudp")

# required for running stuffimport as output
module(load="omprog")

# preprocessors, see below
module(load="mmnormalize")
module(load="mmrm1stspace")
module(load="mmpstrucdata")

# we need to pass rsyslog's full JSON output to stuffimport
template(name="tpl_json_full" type="string" string="%jsonmesg%\n")

###############
#### RULES ####
###############

ruleset(name="stuffimport") {
	# optional: remove possible leading spaces from messages
	action(type="mmrm1stspace")

	# optional: parse RFC5424 structured data
	action(type="mmpstrucdata")

	# recommended: "normalize" log events. You may parse structured data from events here
	action(type="mmnormalize" ruleBase="lognorm.rules")

	# output to stuffimport
	action(type="omprog"
	       name="logstuff"
	       binary="/full/path/to/stuffimport --config /path/to/config.yaml"
	       template="tpl_json_full"

               # stuffimport will confirm startup and each message it delivered
	       confirmMessages="on"
	       confirmTimeout="10000"

               # for running multiple stuffimport instances in parallel
	       queue.type="LinkedList"
	       queue.saveOnShutdown="on"
	       queue.workerThreads="5"

               # resend delay for unconfirmed events
	       action.resumeInterval="5"

               # send SIGKILL to stuffimport if it does not terminate on SIGTERM
	       killUnresponsive="on"

               # store stuffimport's stderr output to given log file
	       output="/path/to/stuffimport.log"

	       # which signal to relay to stuffimport when rsyslog receives a
	       # SIGHUP. stuffimport will reopen it's logging output on SIGHUP
	       # and has no special handling for any other signal (that means,
	       # it will terminate on e.g. SIGINT or SIGTERM)
	       hup.signal="HUP")
}

#################
##### INPUT #####
#################

# listen for events on given UDP port and send them to stuffimport
input(type="imudp" port="1514" ruleset="stuffimport")

